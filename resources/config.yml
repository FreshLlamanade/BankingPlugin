# ===================================================
# ====== Configuration File of 'BankingPlugin' ======
# ===================================================
#
#

# Set the main command names to be used for bank management, account management, and system control in this plugin.
# Type: String
# Defaults: "bank", "account", "bankingplugin"
main-command-names:
  bank: bank
  account: account
  control: bp

# Set the daily times at which players should receive interest payments from their accounts.
# The time zone will be that of the server, not of the individual players.
# These are real times (0 <= time < 24) written in the standard 24-hour format (for example '00:00' for midnight, '13:45', '17:15:30').
# Equivalent values will be considered one.
# Type: List<LocalTime>
# Default: '9:00', '15:00', '21:00'
interest-payout-times:
  
# Set the base interest rate for all bank accounts on the server.
# Value should be a floating point number greater than 0.
# Type: double
# Default: 0.01 (for 1% interest)
interest-rate:
    default: 0.01
    allow-override: true # This boolean determines whether or not individual banks have permission to override the default value.

# Set the consecutive interest multipliers that are applied per-player to the baseline multiplier.
# Each value represents a "stage" to be progressed through in consecutive order.
# Players advance through the multipliers by being online to collect interest more than once in a row.
# At least the first value should be 1, so that the baseline interest rate is used.
# For example: setting the sequence [1, 2, 2, 3, 3, 3, 4, 4, 4, 4] would result in one 1x multiplier stage,
# two 2x stages, three 3x stages, and four 4x stages.
# Multipliers will never go past the final stage, nor further back than the first stage.
# Type: List<Integer>
interest-multipliers:
    default:
        - 1
        - 2
        - 3
        - 5
    allow-override: true

# Set the number of interest payout events a player must own their account for
# before they start collecting interest on that account.
# Set to 0 to start collecting interest immediately after creating the account.
# Type: int
# Default: 0
initial-interest-delay:
    default: 0
    allow-override: true

# Whether to decrement the interest delay period while a player is offline. 
# Set this to false to only decrement the delay period when a player is online for
# an interest payout event, and not while offline.
# Type: boolean
# Default: false
count-interest-delay-offline:
    default: false
    allow-override: false

# Set the number of times a player can be offline and still collect interest on their accounts.
# Set this to 0 for no interest while offline.
# Type: int
# Default: 1
allowed-offline-payouts:
    default: 1
    allow-override: true

# Set the number of times a player can be offline at the interest payout times before their multiplier is reset.
# This is independent of the number of times a player can collect interest payouts offline.
# A player could continue to receive baseline interest payouts offline after the multiplier reset if allowed-offline-payouts is set higher than this.
# If allowed-offline-payouts is set lower than this, an offline player will stop receiving payouts but will not lose their multiplier
# until after they are offline for this number of interest payout times.
# Set this value to 0 for a no-tolerance policy on missing payouts (multiplier reset at first offline payout)
# Type: int
# Default: 1
allowed-offline-payouts-before-multiplier-reset:
    default: 1
    allow-override: true

# Set the behavior of the interest multiplier while a player is offline.
# Setting this value to -1 causes the multiplier to decrease by one stage per payout time while the player is offline.
# Setting this value to 0 causes the multiplier to freeze until the player comes back online. It will remain the same as long as it is not reset.
# Setting this value to 1 causes the multiplier to iterate like normal, even when the player is offline (discouraged)
# Absolute values greater than 1 *are* allowed, but are to be used sparingly (-2 would decrease a player's multiplier by two stages for every missed payout)
# Type: int
# Default: 0
offline-multiplier-behavior:
    default: 0
    allow-override: true

# Set the behavior of the interest multiplier when the player makes a withdrawal.
# Setting this value to -1 causes the multiplier to decrease by one stage per withdrawal.
# Setting this value to 0 causes the multiplier to not be affected by withdrawals (discouraged)
# Setting this value to any positive integer causes the multiplier to be RESET when the player makes a withdrawal.
# Absolute values greater than 1 are, similarly to above, allowed but to be used sparingly.
# Type: int
# Default: 1
withdrawal-multiplier-behavior:
    default: 1
    allow-override: true

# Set the item with which a player can click a account to retrieve information.
# You can set this to an empty string ("") to disable this feature.
# Type: String, converted to ItemStack
# Default: "STICK"
account-info-item: "STICK"

# Set the price a player has to pay in order to create...
# Set this to 0 to disable creation fees.
# Type: double
creation-prices:
    bank:
        player: 100000
        admin: 0
    account:
        default: 2500
        allow-override: true
  
# Set the lowest account balance a player must have to earn interest on their account.
# Set this to 0 to disable this feature (also disables low-balance-fee).
# Type: double
minimum-account-balance:
    default: 10000
    allow-override: true

# Set the fee that must be played by the player if their account balance is below the minimum.
# Set this to 0 to disable this feature.
# Type: double
low-balance-fee:
    default: 5000
    allow-override: true

# Set whether the (current) creation price should be refunded
# when the bank or account is removed.
# Type: boolean
reimburse-creation:
    bank:
        player: false
        admin: false
    account:
        default: false
        allow-override: true

# Set the number of accounts a player may have at any given bank.
# For example, a value of 2 would allow a player to create no more than two accounts at a single bank.
# A third account would have to be created at a different bank.
# Set this to 0 or below to disable this feature.
# Type: int
# Default: 1
player-bank-account-limit:
    default: 1
    allow-override: true

# Account limits are handled with permissions.
# A player with permission "bankingplugin.account.limit.X" has a limit of X accounts.
# A player with permission "bankingplugin.account.limit.*" does not have an account limit.
# Type: int
default-limits:
  # Set the amount of accounts that anyone who doesn't have a
  # specific permission may have.
  # If you don't want the players to have a limit by default set the value to -1.
  bank: 1
  account: 2

# Bank volume limits are handled with permissions.
# A player with permission "bankingplugin.bank.size.X" can create banks with a volume of up to X.
# A player with permission "bankingplugin.bank.size.*" can create banks with unlimited volume.
# Set the volume limit for anyone who doesn't have a specific permission here.
# The minimum volume cannot by bypassed by a permission.
# Admin banks are exempt from these restrictions.
# Type: int
bank-size-limits:
  minimum: 50
  maximum: 50000

# Whether a bank owner should be able to create an account at their own bank.
# Type: boolean
# Default: false
allow-self-banking: false

# Set whether to require confirmation of remove commands.
# Type: boolean
# Default: true
confirm-on-remove: true

# Set whether to require confirmation of removeall commands.
# Type: boolean
# Default: true
confirm-on-removeall: true

# Set whether to require confirmation of account transfer ownership commands.
# Type: boolean
# Default: true
confirm-on-transfer: true

# Set whether the owner of a bank or account should be automatically added as a co-owner when ownership is transferred to another player.
# Type: boolean
# Default: false
trust-on-transfer: false

# Set whether the plugin will check for updates on server start
# and notify permitted players on join.
# The command is not affected by this setting and will continue to
# check for updates.
# Type: boolean
# Default: true
enable-update-checker: true

# Set whether deposits/withdrawals, interest payouts, and debug logs should be saved in the database.
# Debug log file may become quite large!
# Type: boolean
enable-logs:
  transaction-log: true
  interest-log: true
  debug-log: true

# Set the maximum age for economy log entries in days.
# All log entries older than this will be deleted on server start.
# Set this to 0 to disable this feature.
# Type: int
# Default: 30
cleanup-log-days: 30

# Set whether various protection plugins should be hooked into (if installed)
# in order to allow or deny bank or account creation in certain locations.
# Type: boolean
enable-worldguard-integration: true
enable-griefprevention-integration: true
enable-worldedit-integration: true

# Set whether accounts should automatically be removed from the database if
# an error occurred while loading.
# (e.g. no chest, no space above chest, or unknown world)
remove-account-on-error: true

# Set the items for which a player will earn no interest in their account.
blacklist:
# - "DIORITE"


# Set this value to customize how much revenue banks should generate for their owners.
# Bank revenue is calculated as a function of the total value of the bank and of the inequality (https://en.wikipedia.org/wiki/Gini_coefficient) of the balances of its accounts.
# The calculation follows this formula: [ R = (this config value) * (total value of bank) * (1 - gini) * ln(number of accounts with unique owners) ]
# The more unequal the balances of the bank's accounts, the less the owner will earn.
# In this way, a large number of medium-sized accounts are more valuable to the bank owner than many small accounts and a few very valuable ones, assuming the total value is equal.
# View the graph of the function here: https://www.desmos.com/calculator/csrmrifa7u
# Type: double
# Default: 0.10
bank-revenue-multiplier: 0.10

# Set whether the custom WorldGuard flag should be allowed by default.
worldguard-default-flag-value:
  create-bank: false
  
# Set the regex pattern that bank names and account nicknames should be matched against. Players will not be allowed to set names that fail to match with this pattern. Invalid patterns will not be considered.
# Type: String
# Default: ''
name-regex: ''

# Set the prefix of all SQLite table names related to this plugin.
table-prefix: "bankingplugin_"